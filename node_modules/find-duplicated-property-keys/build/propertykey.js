"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addPropertyKeyToArray = exports.PropertyKey = void 0;

const PropertyKey = (key, parent, isArray) => {
  const PropertyKey = {
    key: key,
    parent: parent,
    occurrence: 1,
    isArray: isArray,
    propertyPath: () => PropertyKey.parent == null ? [PropertyKey.key] : parent.propertyPath().concat([PropertyKey.key]),
    toString: () => PropertyKey.parent == null ? [PropertyKey.key] : `${PropertyKey.parent.toString()}${PropertyKey.isArray ? PropertyKey.key : `.${PropertyKey.key}`}`
  };
  return PropertyKey;
};

exports.PropertyKey = PropertyKey;

const addPropertyKeyToArray = (propertyKeyArray, propertyKey) => {
  const propertyKeysInArray = findPropertyKeysInArray(propertyKeyArray, propertyKey);

  if (propertyKeysInArray.length === 0) {
    propertyKeyArray.push(propertyKey);
  } else if (propertyKeysInArray.length === 1) {
    propertyKeysInArray[0].occurrence++;
  } else {
    throw new Error(`Property ${propertyKey.toString()} occurs multiple times in propertyKeys.`);
  }
};

exports.addPropertyKeyToArray = addPropertyKeyToArray;

const findPropertyKeysInArray = (propertyKeysArray, propertyKey) => propertyKeysArray.filter(propertyInArray => propertyInArray.parent === propertyKey.parent && propertyInArray.key === propertyKey.key);